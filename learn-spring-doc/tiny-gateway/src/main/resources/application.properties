server.port=8000
spring.application.name=tiny-gateway
# gateway
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lowerCaseServiceId=true
# gateway cors
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allow-credentials=true
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-headers[0]=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-methods[0]=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposed-headers[0]=Authorization
spring.cloud.gateway.globalcors.corsConfigurations.[/**].exposed-headers[1]=authorization
spring.cloud.gateway.globalcors.corsConfigurations.[/**].max-age=3600
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowed-origin-patterns[0]=*
# geteway route
spring.cloud.gateway.routes[0].id=user-center
spring.cloud.gateway.routes[0].uri=http://127.0.0.1:8001
spring.cloud.gateway.routes[0].predicates[0]=Path=/userCenter/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[1].id=openapi
spring.cloud.gateway.routes[1].uri=http://127.0.0.1:${server.port}
spring.cloud.gateway.routes[1].predicates[0]=Path=/v3/api-docs/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/v3/api-docs/(?<segment>.*), /$\{segment}/v3/api-docs
# springdoc
springdoc.swagger-ui.use-root-path=true
springdoc.swagger-ui.urls[0].name=userCenter
springdoc.swagger-ui.urls[0].url=/v3/api-docs/userCenter
